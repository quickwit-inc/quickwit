[index.create]
long_about = """
Creates an index of ID `index` at `index-uri` configured by a [YAML config file](index-config.md) located at `index-config`.
The index config lets you define the mapping of your document on the index and how each field is stored and indexed.
If `index-uri` is omitted, `index-uri` will be set to `{default_index_root_uri}/{index}`, more info on [Quickwit config docs](config.md).
The command fails if an index already exists unless `overwrite` is passed. 
When `overwrite` is enabled, the command deletes all the files stored at `index-uri` before creating a new index. 
"""

[[index.create.examples]]
name= "Create a new index with the default local metastore."
command = "quickwit index create --index wikipedia --index-config wikipedia_index_config.yaml  --config=./config/quickwit.yaml"

[index.ingest]
long_about = """
Indexes a dataset consisting of newline-delimited JSON objects located at `input-path` or read from *stdin*. 
The data is appended to the target index of ID `index` unless `overwrite` is passed. `input-path` can be a file or another command output piped into stdin. 
Currently, only local datasets are supported.
By default, Quickwit's indexer will work with a heap of 2 GiB of memory, more on [index config page](index-config.md).
"""

[[index.ingest.examples]]
name = "Indexing a dataset from a file"
command = "quickwit index ingest --index wikipedia --config=./config/quickwit.yaml --input-path wikipedia.json"

[[index.ingest.examples]]
name = "Indexing a dataset from stdin"
command = "cat hdfs-log.json | quickwit index ingest --index wikipedia --config=./config/quickwit.yaml"

[index.gc]
note = """
Intermediate files are created while executing Quickwit commands. 
These intermediate files are always cleaned at the end of each successfully executed command. 
However, failed or interrupted commands can leave behind intermediate files that need to be removed. 
Also, note that using a very short grace period (like seconds) can cause the removal of intermediate files being operated on, especially when using Quickwit concurrently on the same index. 
In practice, you can settle with the default value (1 hour) and only specify a lower value if you really know what you are doing.
"""

[index.search]
long_about = """
Searches an index with ID `--index` and returns the documents matching the query specified with `--query`.
More details on the [query language page](query-language.md).
The offset of the first hit returned and the number of hits returned can be set with the `start-offset` and `max-hits` options. 
It's possible to restrict the search on specified fields using the `search-fields` option. 
Search can also be limited to a time range using the `start-timestamp` and `end-timestamp` options. 
These timestamp options are useful for boosting query performance when using a time series dataset.
"""

[[index.search.examples]]
name = "Searching a index"
command = '''quickwit index search --index wikipedia --config ./config/quickwit.yaml --query "Barack Obama"'''

[[index.search.examples]]
name = "Limiting the result set to 50 hits"
command = '''quickwit index search --index wikipedia --config ./config/quickwit.yaml --query "Barack Obama" --max-hits 50'''

[[index.search.examples]]
name = "Looking for matches in the title and url fields only"
command = '''quickwit index search --index wikipedia --config ./config/quickwit.yaml --query "Barack Obama" --search-fields title,url'''

[[index.describe.examples]]
name = "Displays descriptive statistics of your index"
command = '''quickwit index describe --index wikipedia --config ./config/quickwit.yaml'''

[[index.delete.examples]]
name = "Delete your index"
command = '''quickwit index delete --index wikipedia --config ./config/quickwit.yaml'''


[service.run.searcher]
long_about = """
Starts a web server at `rest_listing_address:rest_list_port` that exposes the [Quickwit REST API](search-api.md)
where `rest_listing_address` and `rest_list_port` are defined in Quickwit config file (quickwit.yaml).
The node can optionally join a cluster using the `seeds` parameter. 
This list of node addresses is used to discover the remaining peer nodes in the cluster through a gossip protocol (SWIM).
"""

note = """
Behind the scenes, Quickwit needs to open the following port for cluster formation and workload distribution:

    TCP port (default is 7280) for REST API
    TCP and UDP port (default is 7280) for cluster membership protocol
    TCP port + 1 (default is 7281) for gRPC address for the distributed search

If ports are already taken, the serve command will fail.
"""

[[service.run.searcher.examples]]
name = "Start a Searcher"
command = "quickwit service run searcher --config=./config/quickwit.yaml"

[[service.run.searcher.examples]]
name = "curl request and specify fields to search"
command = '''curl -L "http://127.0.0.1:7280/api/v1/wikipedia/search/stream?query=clinton&searchField=body,title" '''

[[service.run.searcher.examples]]
name = "curl request stream fast field, HTTP1.1 chunked transfer encoding"
command = '''curl -L "http://127.0.0.1:7280/api/v1/wikipedia/search/stream?query=tangkhul&searchField=body,title&fastField=number&outputFormat=csv"  '''

[[service.run.searcher.examples]]
name = "curl request stream fast field as binary, force HTTP2"
command = '''curl -L --http2-prior-knowledge "http://127.0.0.1:7280/api/v1/myindex/search/stream?query=clinton&searchField=body,title&fastField=number&outputFormat=clickHouseRowBinary"  '''

[service.run.indexer]
long_about = """
Starts an indexing server that consumes the sources of index IDs passed in `--indexes` argument.
If all sources of all indexes are exhausted, the server will stop.
"""

[[service.run.indexer.examples]]
name = "Start an Indexer"
command = "quickwit service run indexer --config=./config/quickwit.yaml"


[[source.add.examples]]
name = "Add a file source to `wikipedia` index"
command = ''' 
quickwit source add --index wikipedia --id wikipedia-source --type file --params '{"filepath":"wiki-articles.json"}'
'''

[[source.add.examples]]
name = "Add a Kafka source to `wikipedia` index"
command = ''' 
cat << EOF > wikipedia-source.json
{
  "topic": "wikipedia",
  "client_params": {
    "bootstrap.servers": "localhost:9092",
    "group.id": "my-group-id",
    "security.protocol": "SSL"
  }
}
EOF
quickwit source add --index wikipedia --id wikipedia-source --type kafka --params wikipedia-source.json
'''

[[source.delete.examples]]
name = "Delete a `wikipedia-source` source"
command = ''' 
quickwit source delete --index wikipedia --source wikipedia-source
'''
