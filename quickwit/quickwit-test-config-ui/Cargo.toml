[package]
name = "quickwit-test-config-ui"
version = "0.1.0"
authors = ["Pascal Seitz <pascal.seitz@gmail.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }
quickwit-common = { version = "0.6.1", path = "../quickwit-common", default-features=false, features = ["wasm"] }
quickwit-config = { version = "0.6.1", path = "../quickwit-config", features = ["wasm"] }
quickwit-doc-mapper = { version = "0.6.1", path = "../quickwit-doc-mapper" }
quickwit-datetime = { version = "0.6.1", path = "../quickwit-datetime" }
anyhow = { version = "1.0.71", features = ["std", "backtrace"] }
#tantivy = { version = "0.20", path = "/home/pascal/LinuxData/Development/tantivy/fail_dep", default-features = false, features = ["wasm"] }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
#opt-level = "s"
#debug = true

[workspace]

